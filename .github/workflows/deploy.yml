# 任务名称

name: Deploy Pages

# 触发条件
on:
  # 当项目文件 push 到 main 分支后
  push:
    branches: [ prod ]



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job名称
  build-and-deploy:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest

    # action奇妙的步骤
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"
          
          
      # 缓存 node_modules
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 如果缓存没有命中的话，编译&生成静态文件，可以用yarn或npm
      - name: build
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn && yarn build

      # 部署到github.io静态网站
      - name: Deploy File To GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          token: ${{ secrets.BLOG_DEPLOY }}
          clean: true
          repository-name: RayShineHub/RayShine.github.io
          branch: gh-pages
          folder: dist
          
          
      # 部署到远程服务器
      - name: Deploy File To Remote Server
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: 'root-bt'
          server: '${{ secrets.SERVER_IP_ALIYUN }}'
          ssh_private_key: '${{ secrets.SSH_PRIVATE_KEY_ALIYUN }}'
          local_path: './dist/*'
          remote_path: '/www/server/nginx/html/blog'
        
